// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  code String @unique @default(uuid())
  avatar String
  name String
  email String @unique
  password String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  role Role @relation(fields: [role_id], references: [id])
  role_id Int

  tickets Ticket[]

  @@map("users")
}

model Role {
  id Int @id @default(autoincrement())
  code String @unique @default(uuid())
  name String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  users User[]

  @@map("roles")
}

model Category {
  id Int @id @default(autoincrement())
  code String @unique @default(uuid())
  name String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  tickets Ticket[]

  @@map("categories")
}

model Status {
  id Int @id @default(autoincrement())
  code String @unique @default(uuid())
  name String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  tickets Ticket[]

  @@map("status")
}

model Ticket {
  id Int @id @default(autoincrement())
  code String @unique @default(uuid())
  title String
  description String
  urgency String
  attachments String

  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  category Category @relation(fields: [category_id], references: [id])
  category_id Int
  status Status @relation(fields: [status_id], references: [id])
  status_id Int
  users User @relation(fields: [user_id], references: [id])
  user_id Int

  @@map("tickets")
}
